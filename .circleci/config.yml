version: 2.1
orbs:
  python: circleci/python@2.0
  circleci-cli: circleci/circleci-cli@0.1.9
commands:
  setup-artifactory:
    steps:
      - run:
          name: Configure poetry to pull from artifactory
          command: |
            poetry config repositories.leapyear "$ARTIFACTORY_URL/api/pypi/leapyear-pypi-all/simple"
            poetry config http-basic.leapyear "$ARTIFACTORY_USER" "$ARTIFACTORY_PASSWORD"
jobs:
  lint:
    executor: python/default
    steps:
      - setup-artifactory
      - circleci-cli/install
      - checkout
      - python/install-packages:
          pkg-manager: poetry
          args: -E prospector -E flake8
      - run:
          name: Create the pre-commit cache key
          command: python --version --version | cat .pre-commit-config.yaml - > pre-commit-cache-key.txt
      - restore_cache:
          keys:
            - v1-pre-commit-cache-{{ checksum "pre-commit-cache-key.txt" }}
      - run:
          name: Run all of the linters
          command: poetry run pre-commit run -av
          environment:
            SKIP: no-commit-to-branch
      - save_cache:
          key: v1-pre-commit-cache-{{ checksum "pre-commit-cache-key.txt" }}
          paths:
            - ~/.cache/pre-commit
  behave:
    executor: python/default
    steps:
      - setup-artifactory
      - checkout
      - python/install-packages:
          pkg-manager: poetry
          args: -E prospector -E flake8
      - run:
          name: behave tests
          command: poetry run behave
  deploy:
    executor: python/default
    steps:
      - setup-artifactory
      - checkout
      - python/install-packages:
          pkg-manager: poetry
      - run:
          name: Set the package version
          command: poetry run version --no-repo
      - run:
          name: Configure poetry to push to pypi
          command: |
            poetry config repositories.leapyear-artifactory $(poetry run version --repo)
            poetry config http-basic.leapyear-artifactory $ARTIFACTORY_USER $ARTIFACTORY_PASSWORD
      - run:
          name: Build wheel
          command: poetry build -f wheel
      - store_artifacts:
          path: dist
      - run:
          name: Publish to artifactory
          command: poetry publish -r leapyear-artifactory
workflows:
  build:
    jobs:
      - python/test:
          context: artifactory
          pkg-manager: poetry
          args: -E prospector -E flake8
          pre-install-steps:
            - setup-artifactory
          matrix:
            parameters:
              version: ["3.7", "3.8", "3.9", "3.10"]
      - behave:
          context: artifactory
      - lint:
          context: artifactory
      - deploy:
          context: artifactory
  tag:
    jobs:
      - deploy:
          context: artifactory
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
